React Notes ---------

package manager for react
vite/cra

# create react app from scratch
npm create vite@4.1.0 

# Install dependencies in package.json
npm install

#run code on live server
npm run dev

# Convert html to JSX
bablejs.io/repl

#CSS bootstrap
getbootstrap.com

Ctrl+Alt+Shift+J - Select multi cursor

In React
 - a component cannot return more than one element

1. Use fragments 
import {Fragment} from "react"
2. keep enclosed <> and </> - this is considered as fragments
3. Enclose with div


# Change state dynamically
  // Hook - this is a funciton which allows to tap into built-in features of react
  const [selectedIndex, setSelectedIndex] = useState(-1);
  // const [name, setName] = useState('')
  // arr[0]; //variable (selectedIndex)
  // arr[1]; //updater function

#Extension
  ES7+ - 

  -   rafce - React Arrow Function Component Export

#Using children prop, we can pass children to component

interface Props {
  children: string;
}
  - If you want to pass complex structure like html then pass
  ReactNode to the children in interface
interface Props {
  children: ReactNode;
}

# React developer tools
console with react components and profiler
- the tools provide detailed view of source files
- A component belongs to which dom and class

Static button ------
const Button = () => {
  return (
    <button type="button" className="btn btn-primary">
      Primary
    </button>
  );
}


Dynamic button ------
interface Props {
  children: string;
}

const Button = ({ children }: Props) => {
  return (
    <button type="button" className="btn btn-primary">
      {children}
    </button>
  );
};

export default Button;


 - Do not use inline styling for generic work, use them as last resort

-  Bootstrap
-  Material UI
-  Tailwind CSS
-  Daily UI
-  Chakra UI  *******


------
- 
ICONS --------

https://react-icons.github.io/react-icons/search

# StateHook
- React updates state asynchronously
- State is stored outside the components
- Use hooks at the top level of your component

# StrictMode
- When StrictMode is enabled, react renders each component twice
- It behaves this way only development env
- In Production, the StrictMode checks are not included and our component will render only once